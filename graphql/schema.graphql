"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

input QueryUsersOrderByOrderByClause {
    column: QueryUsersOrderByColumn!
    order: SortOrder!
}

input QueryUserPhonesOrderByOrderByClause {
    column: QueryUserPhonesOrderByColumn!
    order: SortOrder!
}

enum QueryUsersOrderByColumn {
    NAME @enum(value: "name")
    EMAIL @enum(value: "email")
    DATE_OF_BIRTH @enum(value: "dateOfBirth")
    IS_ACTIVE @enum(value: "isActive")
    USER_PHONE @enum(value: "userPhone.phoneNumber")
}

enum QueryUserPhonesOrderByColumn {
    PHONE_NUMBER @enum(value: "name")
    USER_ID @enum(value: "userId")
}

enum SortOrder {
    ASC
    DESC
}

type Query {
    users(orderBy: _ @orderBy(columns: ["name", "email", "isActive", "dateOfBirth", "userPhone"])): [User!]! @paginate(defaultCount: 10000)
    usersPhone(orderBy: _ @orderBy(columns: ["phoneNumber", "userId"])): UserPhone! @paginate(defaultCount: 10)
}

type Mutation {
     createUser(input: CreateUserInput! @spread): User @create
     updateUser(input: UpdateUserInput! @spread): User @update
     deleteUser(id: ID!): User @delete

}
input UpdateUserInput {
    id: ID!
    name: String,
    email: String,
    dateOfBirth: Date,
    isActive: Int
    userPhone: UpdateUserPhoneBelongsTo
}
input CreateUserInput {
    name: String!,
    email: String!,
    dateOfBirth: Date!,
    isActive: Int!
    userPhone: CreateUserPhoneBelongsTo!
}



input UpdateUserPhoneBelongsTo {
    update: UpdateUserPhoneInput
}

input CreateUserPhoneBelongsTo {
    create: CreateUserPhoneInput!
}

input CreateUserPhoneInput {
    phoneNumber: String!
}

input UpdateUserPhoneInput {
    id: Int!
    phoneNumber: String
}

type User {
    id: ID!
    name: String!
    email: String!
    userPhone: UserPhone @hasOne
    isActive: Int
    dateOfBirth: Date
    updatedAt: DateTime
    createdAt: DateTime
}

type UserPhone {
    user: User! @belongsTo
    phoneNumber: String
}


